name: Ubuntu CI
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    branches: [master]
  push:
    branches: [master]
    tags:
      - "v*"
concurrency:
  group: ubuntu-ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-ubuntu:
    name: Build
    strategy:
      matrix:
        version: ["20.04"]
    runs-on: ubuntu-latest
    container:
      image: pavignol/cpp-kzg-ceremony-client:ubuntu-${{ matrix.version }}-armv7-build
    steps:
      - uses: actions/checkout@v2
      - run: ./build-arm.sh
      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-${{ matrix.version }}-armv7-binaries
          path: |
            build/bin/cpp-kzg-ceremony-client
            build/bin/cpp-kzg-ceremony-client-test
            build/bin/initialContribution.json
            build/bin/updatedContribution.json

  test-ubuntu:
    name: Test
    needs: build-ubuntu
    strategy:
      matrix:
        version: ["20.04"]
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-${{ matrix.version }}-armv7-binaries
      - run: chmod +x ./cpp-kzg-ceremony-client-test
      - uses: uraimo/run-on-arch-action@v2
        name: Run tests
        with:
          arch: armv7
          distro: ubuntu${{ matrix.version }}
          dockerRunArgs: |
            --volume "${PWD}:/artifacts"
          run: |
            cd /artifacts
            ./cpp-kzg-ceremony-client-test

  sanity-check-ubuntu:
    name: Sanity Check
    needs: build-ubuntu
    strategy:
      matrix:
        version: ["20.04"]
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-${{ matrix.version }}-armv7-binaries
      - run: chmod +x ./cpp-kzg-ceremony-client
      - uses: uraimo/run-on-arch-action@v2
          name: Run tests
          with:
            arch: armv7
            distro: ubuntu${{ matrix.version }}
            dockerRunArgs: |
              --volume "${PWD}:/artifacts"
            run: |
              cd /artifacts
              ./cpp-kzg-ceremony-client --help

  publish-ubuntu:
    needs: [test-ubuntu, sanity-check-ubuntu]
    if: startsWith(github.ref_name, 'v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["20.04"]
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-${{ matrix.version }}-armv7-binaries
      - run: chmod +x ./cpp-kzg-ceremony-client
      - run: tar -czvf cpp-kzg-ceremony-client-${{ github.ref_name }}-ubuntu-${{ matrix.version }}-amd64.tar.gz cpp-kzg-ceremony-client
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: cpp-kzg-ceremony-client-${{ github.ref_name }}-ubuntu-${{ matrix.version }}-amd64.tar.gz
          token: ${{ secrets.PAT }}
